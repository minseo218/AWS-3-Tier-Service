plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

// index.html을 JAR 파일에 포함하지 않음
/*jar {
    exclude('index.html')
}*/

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

//    runtimeOnly 'com.mysql:mysql-connector-j'

    /// ADD AWS SDK Dependence
    implementation platform('software.amazon.awssdk:bom:2.21.44')
    implementation 'software.amazon.awssdk:secretsmanager'
    implementation 'software.amazon.awssdk:ssm'

    // Lombok for boilerplate code such as getters, setters, constructors, etc.
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Boot Starter Test for testing your application
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.google.code.gson:gson:2.8.8'

    //AWS Parameter Store
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.1.0")
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-parameter-store'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'mysql:mysql-connector-java:8.0.32'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


}

tasks.named('test') {
    useJUnitPlatform()
}
